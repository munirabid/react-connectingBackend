{"ast":null,"code":"var _jsxFileName = \"C:\\\\Muneer\\\\React\\\\react-backend\\\\src\\\\App.js\";\nimport React, { useState } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\nimport LoadingSpinner from \"./components/layout/Spinner\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  async function fetchMoviesHandler() {\n    const response = await fetch(\"https://swapi.py4e.com/api/films/\");\n    const data = await response.json();\n    const transformedData = data.results.map(movie => {\n      return {\n        id: movie.episode_id,\n        title: movie.title,\n        releaseDate: movie.release_date,\n        openingText: movie.opening_crawl\n      };\n    });\n    setMovies(transformedData);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMoviesHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, isLoading ? /*#__PURE__*/React.createElement(LoadingSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 22\n    }\n  }) : /*#__PURE__*/React.createElement(MoviesList, {\n    movies: movies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 43\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Muneer/React/react-backend/src/App.js"],"names":["React","useState","MoviesList","LoadingSpinner","App","movies","setMovies","isLoading","setIsLoading","fetchMoviesHandler","response","fetch","data","json","transformedData","results","map","movie","id","episode_id","title","releaseDate","release_date","openingText","opening_crawl"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;AACA,OAAOC,cAAP,MAA2B,6BAA3B;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;;AAEA,iBAAeQ,kBAAf,GAAoC;AAClC,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAD,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,UAAMC,eAAe,GAAGF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAkBC,KAAD,IAAW;AAClD,aAAO;AACLC,QAAAA,EAAE,EAAED,KAAK,CAACE,UADL;AAELC,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAFR;AAGLC,QAAAA,WAAW,EAAEJ,KAAK,CAACK,YAHd;AAILC,QAAAA,WAAW,EAAEN,KAAK,CAACO;AAJd,OAAP;AAMD,KAPuB,CAAxB;AASAlB,IAAAA,SAAS,CAACQ,eAAD,CAAT;AACD;;AAED,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAEL,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,SAAS,gBAAG,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,gBAAwB,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEF,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADpC,CAJF,CADF;AAUD;;AAED,eAAeD,GAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\nimport LoadingSpinner from \"./components/layout/Spinner\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  async function fetchMoviesHandler() {\n    const response = await fetch(\"https://swapi.py4e.com/api/films/\");\n    const data = await response.json();\n    const transformedData = data.results.map((movie) => {\n      return {\n        id: movie.episode_id,\n        title: movie.title,\n        releaseDate: movie.release_date,\n        openingText: movie.opening_crawl,\n      };\n    });\n\n    setMovies(transformedData);\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {isLoading ? <LoadingSpinner /> : <MoviesList movies={movies} />}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}